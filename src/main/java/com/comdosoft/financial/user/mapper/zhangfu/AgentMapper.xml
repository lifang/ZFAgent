<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.AgentMapper">

	<select id="getOne" resultType="map">
	<![CDATA[
		SELECT a.id, a.types, a.company_name, a.business_license, a.tax_registered_no, a.name, a.card_id, a.phone, a.email,
			   a.address, a.card_id_photo_path, a.license_no_pic_path, a.tax_no_pic_path,
			   c.username, c.city_id
		  FROM agents a JOIN customers c ON a.customer_id = c.id
		 WHERE a.customer_id = #{customerId}
	]]>
	</select>

	<select id="getOneCustomer"
		resultType="com.comdosoft.financial.user.domain.zhangfu.Customer">
	<![CDATA[
		SELECT phone, email, dentcode, password
		  FROM customers
		 WHERE id = #{customerId}
	]]>
	</select>

	<update id="updateCustomer">
		UPDATE customers
		<trim prefix="SET" suffixOverrides=",">
			<if test="phone != null and phone !=''">phone = #{phone},</if>
			<if test="email != null and email !=''">email = #{email},</if>
			<if test="dentcode != null and dentcode !=''">dentcode = #{dentcode},</if>
			<if test="password != null and password !=''">password = #{password}</if>
		</trim>
		WHERE id = #{customerId}
	</update>

	<update id="update">
		UPDATE agents
		<trim prefix="SET" suffixOverrides=",">
			<if test="phone != null and phone !=''">phone = #{phone},</if>
			<if test="email != null and email !=''">email = #{email}</if>
		</trim>
		WHERE customer_id = #{customerId}
	</update>

	<select id="getAddressList" resultType="map">
	<![CDATA[
			SELECT
				IFNULL(ca.id,0) id,
				IFNULL(c2.id,0) AS city_parent_id,
				IFNULL(c. NAME,'') AS city_name,
				IFNULL(c2. NAME,'') AS city_parent_name,
				IFNULL(city_id,0) as cityId,
				concat(
					IFNULL(c2. NAME, ''),
					IFNULL(c. NAME, '')
				) AS city,
				IFNULL(address,'') as address,
				IFNULL(zip_code,'') as zipCode,
				IFNULL(receiver,'') as receiver,
				IFNULL(moblephone,'') as moblephone,
				IFNULL(telphone,'') as telphone,
				IFNULL(is_default,'') as isDefault,
				IFNULL(customer_id,'') as  customerId
			FROM
				customer_addresses ca
			LEFT JOIN cities c ON ca.city_id = c.id
			LEFT JOIN cities c2 ON c.parent_id = c2.id
			WHERE
				ca.customer_id = #{customerId} and ca.status = 1
			ORDER BY
				ca.created_at DESC
	]]>
	</select>

	<select id="getOneAddress" resultType="map">
	<![CDATA[
		SELECT id, city_id, receiver, moblephone, zip_code, address, is_default
		  FROM customer_addresses
		 WHERE id = #{id}
	]]>
	</select>

	<insert id="insertAddress" useGeneratedKeys="true" keyProperty="id">
	<![CDATA[
		INSERT INTO customer_addresses (city_id, receiver, moblephone, zip_code, address, is_default, customer_id,status,created_at)
		VALUES (#{cityId}, #{receiver}, #{moblephone}, #{zipCode},  #{address},  #{isDefault},  #{customerId},1,NOW())
	]]>
	</insert>

	<update id="updateAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default = #{is_default}
		 WHERE customer_id = #{customerId}
	]]>
	</update>
	
	<update id="update_Address">
	UPDATE customer_addresses
		<trim prefix="SET" suffixOverrides=",">
		updated_at = NOW(),
			<if test="cityId != null">city_id = #{cityId},</if>
			<if test="zipCode != null and zipCode !=''">zip_code = #{zipCode},</if>
			<if test="address != null and address !=''">address = #{address},</if>
			<if test="receiver != null and receiver !=''">receiver = #{receiver},</if>
			<if test="telphone != null and telphone !=''">telphone = #{telphone},</if>
			<if test="moblephone != null and moblephone !=''">moblephone = #{moblephone},</if>
			<if test="isDefault != null">is_default = #{isDefault}</if>
		</trim>
		WHERE id = #{id}
	</update>
	
		<update id="setDefaultAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default = 1 ,updated_at = NOW()
		 WHERE id = #{id}  and customer_id = #{customerId}
	]]>
	</update>
	<update id="setNotDefaultAddress">
	<![CDATA[
		UPDATE customer_addresses SET is_default =2 ,updated_at = NOW()
		 WHERE id != #{id} and customer_id = #{customerId}
	]]>
	</update>

	<update id="deleteAddress">
 
	UPDATE customer_addresses SET status = 2
		 WHERE id = #{id}
		<!-- DELETE FROM customer_addresses WHERE id = #{id} -->
	</update>

<!-- 批量删除 地址 -->
	<update id="batchDeleteAddress">
 
	UPDATE customer_addresses SET status = 2
		 WHERE id in
		<foreach item="ids" collection="ids" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</update>
	

	<select id="queryAgent" resultType="map">
	<![CDATA[
		SELECT * FROM agents  WHERE id = #{id}
	]]>
	</select>

	<select id="findAgentByCustomerId" resultType="map">
	<![CDATA[
		SELECT * FROM customers  WHERE id = #{param1}
	]]>
	</select>

	<!-- 查询代理商下的商户数 -->
	<select id="getCommercialTenantCount" resultType="int">
	<![CDATA[
		SELECT count(c.id) FROM customers c 
		LEFT JOIN customer_agent_relations car ON c.id = car.customer_id
		LEFT JOIN cities ct ON ct.id = c.city_id 
		WHERE c.types = 1 AND c.status = 2 AND car.agent_id = #{agentId} AND car.types = 1 AND car.status = 1 
	]]>
	</select>

	<!-- 查询代理商下的商户列表 -->
	<select id="getCommercialTenantList" resultType="map" parameterType="com.comdosoft.financial.user.domain.query.CommercialReq">
	<![CDATA[
		SELECT c.id, c.name, c.username, c.email, c.phone, c.types, c.status, c.city_id,
		car.agent_id, car.customer_id, car.`status` AS cstatus, car.types AS ctypes,
		ct.name AS cityname, ct.id AS cityid   
		FROM customers c LEFT JOIN customer_agent_relations car ON c.id = car.customer_id
		LEFT JOIN cities ct ON ct.id = c.city_id 
		WHERE c.types = 1 AND c.status = 2 AND car.agent_id = #{agentId} AND car.types = 1 AND car.status = 1 
		ORDER BY c.created_at DESC LIMIT #{offset}, #{rows};
	]]>
	</select>
	
	<!-- 删除单个商户(更新customers表) -->
	<update id="deleteCommercial" flushCache="true">
	<![CDATA[
		UPDATE customers SET status = 1, updated_at = NOW() WHERE id = #{customer_id}
	]]>
	</update>
	
	<!-- 删除单个商户(更新customer_agent_relations表) -->
	<update id="updateCommercialStatus" flushCache="true">
	<![CDATA[
		UPDATE customer_agent_relations SET status = 1, updated_at = NOW() WHERE customer_id = #{customer_id}
	]]>
	</update>
	
	<update id="updatePhoneNumber">
	<![CDATA[
		UPDATE agents SET phone =#{phone} WHERE id = #{id}
	]]>
	</update>
	
	<update id="updateEmailAddr">
	<![CDATA[
		UPDATE agents SET email =#{email} WHERE id = #{id}
	]]>
	</update>

</mapper>
