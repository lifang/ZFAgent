<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.ExchangeGoodMapper">
  
      <insert id="add"  parameterType="com.comdosoft.financial.user.domain.query.ExchangeGoodReq">
		INSERT into exchange_goods_records(customer_id,terminals_list,from_agent_id,
		to_agent_id,created_at,updated_at,quantity)
		VALUES (#{customerId},#{terminalList},#{fromAgentId},
		#{toAgentId},NOW(),NOW(),#{quantity})
 	 </insert>
     
      <update id="upTerminal_AgentId" parameterType="com.comdosoft.financial.user.domain.query.ExchangeGoodReq">
         UPDATE terminals set agent_id=#{toAgentId} where serial_num=#{serialNum}
     </update>
     
     
     <select id="getExchangeGoodList" parameterType="com.comdosoft.financial.user.domain.query.ExchangeGoodReq" resultType="map">
            SELECT egr.id,ifnull(a.company_name,a.name)  fromname,ifnull(a2.company_name,a2.name) toname,
            DATE_FORMAT(egr.created_at,'%Y-%m-%d %H:%i:%s') as created_at,egr.quantity  
			from exchange_goods_records egr
            LEFT JOIN agents a on a.id=egr.from_agent_id
            LEFT JOIN agents a2 on a2.id=egr.to_agent_id
			where (egr.customer_id in 
			(SELECT customer_id from customer_agent_relations where types=2 and agent_id=#{agentId}) OR
			egr.customer_id=(SELECT customer_id from agents WHERE id=#{agentId}))
			<if test="startTime!=null">
			   <![CDATA[ and DATE_FORMAT(egr.created_at,'%Y-%m-%d') >= str_to_date(#{startTime},'%Y-%m-%d') ]]>
			</if>
			<if test="endTime!=null">
			   <![CDATA[ and DATE_FORMAT(egr.created_at,'%Y-%m-%d') <= str_to_date(#{endTime},'%Y-%m-%d') ]]>
			</if>
			<if test="sonAgentId!=0">
			   <![CDATA[ and (egr.from_agent_id=#{sonAgentId} or egr.to_agent_id=#{sonAgentId} )  ]]>
			</if>
			order by egr.created_at desc
			LIMIT #{offset}, #{rows}
     </select>
     
   <select id="getExchangeGoodTotal" parameterType="com.comdosoft.financial.user.domain.query.ExchangeGoodReq" resultType="int">
            SELECT count(*) 
			from exchange_goods_records egr
			where (customer_id in 
			(SELECT customer_id from customer_agent_relations where types=2 and agent_id=#{agentId}) OR
			customer_id=(SELECT customer_id from agents WHERE id=#{agentId}))
			<if test="startTime!=null">
			   <![CDATA[ and DATE_FORMAT(egr.created_at,'%Y-%m-%d') >=  str_to_date(#{startTime},'%Y-%m-%d') ]]>
			</if>
			<if test="endTime!=null">
			   <![CDATA[ and DATE_FORMAT(egr.created_at,'%Y-%m-%d') <=  str_to_date(#{endTime},'%Y-%m-%d') ]]>
			</if>
			<if test="sonAgentId!=0">
			   <![CDATA[ and (egr.from_agent_id=#{sonAgentId} or egr.to_agent_id=#{sonAgentId} )  ]]>
			</if>
     </select>
     
      <select id="getInfo" parameterType="com.comdosoft.financial.user.domain.query.ExchangeGoodReq" resultType="map">
            SELECT egr.id,ifnull(a.company_name,a.name) fromname,ifnull(a2.company_name,a2.name) toname,egr.quantity,egr.terminals_list,
            DATE_FORMAT(egr.created_at,'%Y-%m-%d %H:%i:%s') as created_at,egr.quantity ,ifnull(c.name,c.username) as creator
			from exchange_goods_records egr
            LEFT JOIN agents a on a.id=egr.from_agent_id
            LEFT JOIN agents a2 on a2.id=egr.to_agent_id
            LEFT JOIN customers c on c.id=egr.customer_id
			where egr.id=#{id}
     </select>
     
     
     <select id="getTerminalTotal"  resultType="int">
		SELECT count(t.id)
	    from terminals t 
		where t.agent_id=#{fromAgentId} and t.customer_id is null 
     </select>
     
     <select id="getTerminalList"  resultType="map">
		SELECT t.serial_num,(pc.opening_cost+g.retail_price) as money
	    from terminals t 
	    LEFT JOIN goods g on t.good_id=g.id 
	    LEFT JOIN pay_channels pc on pc.id=t.pay_channel_id
		where t.agent_id=#{fromAgentId} and t.customer_id is null 
		LIMIT #{offset}, #{rows}
     </select>
     
     <select id="isExit" resultType="int">
		SELECT count(t.serial_num) FROM terminals t
		WHERE t.agent_id = #{fromAgentId} and t.serial_num=#{serialNum}
	</select>
	
	<select id="isUsed" resultType="int">
		SELECT count(t.serial_num) FROM terminals t
		WHERE t.agent_id = #{fromAgentId} AND t.customer_id IS NULL and t.serial_num=#{serialNum}
	</select>
	
</mapper>