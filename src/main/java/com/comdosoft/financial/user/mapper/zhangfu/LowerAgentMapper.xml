<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.LowerAgentMapper">


	<select id="getProfitList" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="map">
        select b.name as channelName,c.trade_value as tradeTypeName,a.percent,a.pay_channel_id
 from agent_profit_settings a 
left join pay_channels b on a.pay_channel_id=b.id 
left join dictionary_trade_types c on a.trade_type_id=c.id 
where a.agent_id=1 group by a.trade_type_id,a.pay_channel_id order by c.id,a.updated_at desc
     </select>


	<select id="getLowerAgentList" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="map">
        select 
        if(d.allQty is null,'0',d.allQty) as allQtyStr,
        case d.status when 1 then '待审核' when 2 then '初审不通过' 
          when 3 then '初审通过' when 4 then '审核不通过' when 5 then '正常' when 6 then '已停用' else ' ' end
          as statusStr,
        case d.is_have_profit when 0 then '关闭' else if(d.default_profit is null,'非默认比例','默认比例') end as isProfitStr,  
          d.* from(select a.id,a.company_name,a.status,a.is_have_profit,a.default_profit,
		(select sum(b.quantity) from prepare_goods_records b where b.agent_id=a.id) as allQty,
		(select count(c.id) from terminals c where c.agent_id=a.id and c.status=1) as openNum
		from agents a where a.parent_id=#{agents_id} order by a.updated_at desc) d
		Limit #{offset},#{rows}
     </select>
     
   <select id="checkLoginId" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="int">
        select count(a.id) from customers a where a.username like #{loginId}
   </select>
     
   <select id="getLowerAgentTotal" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="int">
        select count(a.id) from agents a where a.parent_id=#{agents_id}
   </select>
   
   <select id="getCustomerId" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="int">
        select a.id from customers a where a.username like #{loginId}
   </select>
     
    <select id="getInfo" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq" resultType="map">
        select a.types,a.name,a.card_id,a.company_name,a.business_license,a.phone,a.email,a.address,a.is_have_profit,
        (select b.username from customers b where b.id=a.customer_id) as loginId from agents a where a.id=#{id}
    </select>
    
    <select id="getProvinceList" resultType="map">
    	select a.name,a.id  from cities a where a.parent_id=0	
    </select>
    
    <select id="getCityList" parameterType="int" resultType="map">
    	select a.name,a.id  from cities a where a.parent_id=#{proId}	
    </select>
    
    <select id="getTradelist" parameterType="int" resultType="map">
    	select b.trade_value,b.id,c.name,c.id from support_trade_types a 
left join dictionary_trade_types b on a.trade_type_id=b.id 
left join pay_channels c on a.pay_channel_id=c.id where a.pay_channel_id=#{id} order by b.id 
    </select>
    
     <select id="getChannellist" resultType="map">
    	select a.id,a.name from pay_channels a
    </select>
    
    <insert id="addNewAgent" useGeneratedKeys="true" keyProperty="id"  parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
			insert into agents(types,name,card_id,company_name,business_license,phone,email,address,
			is_have_profit,created_at,updated_at,code,customer_id,status,parent_id) 
		values(#{agentType},#{agentName},#{agentCardId},#{companyName},#{companyId},#{phoneNum},
		#{emailStr},#{addressStr},#{isProfit},now(),now(),#{agents_id},#{customer_id},1,#{agents_id})
   </insert>
   
    <insert id="addNewCustomer" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
   		insert into customers(username,password,created_at,updated_at) values(#{loginId},#{pwd},now(),now())
   </insert>
   
   <insert id="savePrecent" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
   		insert into agent_profit_settings(agent_id,pay_channel_id,percent,created_at,updated_at,trade_type_id) value
   		 (#{son_agents_id},#{channelId},#{precent},now(),now(),#{tradeTypeId})
   </insert>
   
   <update id="editPrecent" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
		update agent_profit_settings set percent=#{precent},created_at=now(),updated_at=now() 
		where agent_id=#{son_agents_id} and pay_channel_id=#{channelId} and trade_type_id=#{tradeTypeId}  
	</update>
   
   <update id="saveAgents" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
		update agents a set a.types=#{agentType},a.company_name=#{companyName},
		a.business_license=#{companyId},a.name=#{agentName},a.card_id=#{agentCardId},
		a.phone=#{phoneNum},a.email=#{emailStr},a.address=#{addressStr} ,is_have_profit=#{isProfit},
		a.updated_at=now(),code=#{agents_id} where a.id=#{id}
	</update>
    
    <update id="saveCustomers" parameterType="com.comdosoft.financial.user.domain.query.LowerAgentReq">
		update customers a set a.password=#{pwd} where a.username =#{loginId}
	</update>
    
</mapper>