<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.user.mapper.zhangfu.TerminalsWebMapper">

	<insert id="submitAgent" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.zhangfu.CsAgent">
		INSERT into
		cs_agents(customer_id,terminals_quantity,status,
		address,reason,created_at,updated_at,apply_num,terminals_list,reciver,phone)
		VALUES(#{customerId},#{terminalsQuantity},#{status},#{address},#{reason},
		now(),now(),#{applyNum},#{terminalsList},#{reciver},#{phone})
	</insert>

	<select id="getTerminalList" parameterType="map" resultType="map">
		SELECT t.id,t.serial_num,t.status,t.type,o.id as appid,o.status as appstatus,m.title,m.phone,p.`name` as channelName ,g.model_number,g.title AS goodsName,b.`name` as brandsName
		FROM terminals t LEFT JOIN opening_applies o
		ON o.terminal_id = t.id
		LEFT JOIN merchants m 
		ON m.id = t.merchant_id
		LEFT JOIN pay_channels p
		ON p.id = t.pay_channel_id
		LEFT JOIN goods g
		ON g.id = t.good_id
		LEFT JOIN good_brands b
		ON b.id = g.good_brands_id
		WHERE (t.agent_id in(select a.id from agents a where a.`code` LIKE (select CONCAT(z.`code`,'%') from agents z  where z.id = #{id} )))
		<if test="frontStatus != null and frontStatus !=''">AND t.`status` = #{frontStatus}</if>
		<if test="serialNum != null and serialNum !=''">AND  t.serial_num like '%${serialNum}%'</if>
		ORDER BY t.created_at DESC
		LIMIT #{offSetPage},#{pageSize}

	</select>

	<select id="getTerminalListPage" parameterType="map" resultType="int">
		SELECT count(*)
		FROM terminals t LEFT JOIN opening_applies o
		ON o.terminal_id = t.id
		LEFT JOIN merchants m 
		ON m.id = t.merchant_id
		LEFT JOIN pay_channels p
		ON p.id = t.pay_channel_id
		LEFT JOIN goods g
		ON g.id = t.good_id
		LEFT JOIN good_brands b
		ON b.id = g.good_brands_id
		WHERE (t.agent_id in(select a.id from agents a where a.`code` LIKE (select CONCAT(z.`code`,'%') from agents z  where z.id =#{id} )))
		<if test="frontStatus != null and frontStatus !=''">AND t.`status` = #{frontStatus}</if>
		<if test="serialNum != null and serialNum !=''">AND  t.serial_num like '%${serialNum}%'</if>
		ORDER BY t.created_at DESC
	</select>
	
	<select id="getTerminStatus" resultType="map">
		SELECT t.`status`
		FROM terminals t 
		GROUP BY t.`status`
		HAVING t.`status` is not NULL
	</select>
	
	<select id="searchUser" resultType="map">
		SELECT u.id ,u.`username` FROM  agents s
		LEFT JOIN customer_agent_relations c ON c.agent_id = s.id
		LEFT JOIN customers u ON u.id = c.customer_id
		WHERE s.customer_id = #{customerId}
		<if test="name != null and name != ''">
		and u.name like '%${name}%' 
		</if>
	</select>
	
	<select id="getTerminalsNum" parameterType="map" resultType="object">
		SELECT id FROM terminals
		WHERE serial_num =#{terminalsNum} and agent_id = #{agentId}
	</select>
	
	<select id="numIsBinding" parameterType="string" resultType="int">
		SELECT count(*) FROM terminals t
		WHERE t.serial_num=#{terminalsNum} and customer_id is null
	</select>
	
	<update id="Binding" parameterType="map">
		UPDATE terminals SET customer_id = #{userId},type = #{keys}
		WHERE serial_num = #{terminalsNum}
	</update>
	
	<select id="findUname" parameterType="map" resultType="int">
		SELECT COUNT(*) from customers 
		WHERE username=#{username}
	</select>
	
	<select id="checkTerminalCode" parameterType="map" resultType="int">
		SELECT count(*) FROM terminals t
		WHERE t.serial_num = #{serialNum} and t.`status` != #{status} and t.`status` != #{status1}
		AND (t.agent_id in(select a.id from agents a where a.`code` LIKE (select CONCAT(z.`code`,'%') from agents z  where z.id = #{id} )))
	</select>
	
	<insert id="addUser" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		<!-- INSERT  into customers(username,password,city_id,account_type,types,phone,email,created_at,status,name,integral,updated_at)
		VALUES(#{username},#{password},#{cityId},#{accountType},#{types},#{phone},#{email},now(),#{status},#{name},#{integral},now()) -->
		
		INSERT  into customers(username,password,city_id,types,created_at,status,name,integral,updated_at)
		VALUES(#{username},#{password},#{cityId},#{types},now(),#{status},#{name},#{integral},now())
	</insert>
	
	<select id="getAddressee" parameterType="map" resultType="map">
		SELECT a.id,a.receiver,a.moblephone,a.address,a.zip_code as zipCode,a.is_default as isDefault,a.city_id as cityId,c.`id` as cityId,c.`name` as sonName,s.`name` as parentName
		FROM customer_addresses a LEFT JOIN cities c ON c.id = a.city_id
		LEFT JOIN cities s ON s.id = c.parent_id
		WHERE
		a.customer_id=#{customerId} and a.`status` =#{status}
	</select>
	
	<insert id="addCostometAddress" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.zhangfu.CustomerAddress">
		INSERT INTO customer_addresses(city_id,receiver,address,moblephone,zip_code,is_default,customer_id,created_at,updated_at,status)
		VALUES(#{cityId},#{receiver},#{address},#{moblephone},#{zipCode},#{isDefault},#{customerId},now(),now(),#{status})
	</insert>
	
	<insert id="addCsAgentMark" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO cs_agent_marks(cs_agent_id,customer_id,content,created_at)
		VALUES(#{agentId},#{customerId},#{content},now())
	</insert>
	
	<select id="getApplyDetails" parameterType="int" resultType="map">
		SELECT t.id,t.serial_num,t.`status`,g.title,g.model_number,b.name as
		brandName,a.name as factorName,m.title as merTitle,m.phone,e.order_number,date_format(e.created_at,'%Y-%c-%d %H:%i:%s') as createdAt,c.`name` as channelName,c.id as channelId,l.`id` as appId,l.`status` as applieStatus,e.types,
		u.`name` as userName ,u.phone as userPhone,u.email as userEmail,q.`company_name` as companyName
		FROM terminals t 
		LEFT JOIN order_goods o on o.order_id = t.order_id and o.good_id = t.good_id
		LEFT JOIN goods g on t.good_id=g.id
		LEFT JOIN good_brands b on g.good_brands_id=b.id
		LEFT JOIN pay_channels c on c.id=t.pay_channel_id
		LEFT JOIN factories a ON c.factory_id=a.id
		LEFT JOIN merchants m ON t.merchant_id=m.id
		LEFT JOIN orders e ON t.order_id=e.id
		LEFT JOIN opening_applies l ON l.terminal_id = t.id
		LEFT JOIN customers u ON u.id = t.customer_id
		LEFT JOIN agents q on q.id = t.agent_id
		WHERE t.id=#{id}
	</select>
	
	<select id="getRate" parameterType="int" resultType="map">
		SELECT
		s.id,s.terminal_rate,d.trade_type,d.trade_value,y.rate as service_rate,t.base_rate,l.`status`
		FROM terminals t LEFT JOIN
		support_trade_types s ON t.pay_channel_id = s.pay_channel_id
		LEFT JOIN dictionary_trade_types d ON d.id = s.trade_type_id
		LEFT JOIN pay_channel_billing_cycles y ON y.pay_channel_id = t.pay_channel_id and y.billing_cycles_id = t.billing_cycles_id
		LEFT JOIN terminal_trade_type_infos l ON l.trade_type_id = s.trade_type_id and l.terminal_id = #{id} 
		WHERE t.id=#{id} 
	</select>
	
	<select id="getTenancy" parameterType="int" resultType="map">
	<![CDATA[
		SELECT
		g.has_lease,g.lease_price,g.lease_time,g.lease_deposit,
		g.return_time
		,g.lease_description,
		datediff(now(), o.updated_at) as createdDay,
		date_format(o.updated_at,'%Y-%m-%d') as created_at
		FROM terminals t LEFT JOIN
		goods g ON t.good_id = g.id
		LEFT JOIN orders o ON o.id = t.order_id
		where t.id = #{id}
		 ]]>
	</select>
	
	<select id="getOppinfo" resultType="map"  parameterType="com.comdosoft.financial.user.domain.zhangfu.OpeningApplie">
 		SELECT e.*,p.`name` as channelname,b.`name` as billingname FROM opening_applies e 
		LEFT JOIN pay_channels p on p.id = e.pay_channel_id
		LEFT JOIN dictionary_billing_cycles b ON b.id = e.billing_cyde_id
		WHERE  terminal_id = #{terminalId}
 	</select>
 	
 	<select id="getModule"  resultType="map">
		SELECT o.* 
		FROM terminals t LEFT JOIN other_requirements o ON t.pay_channel_id = o.pay_channel_id
		where t.id = #{terminalsId} and o.types = #{type}
	</select>
	
	<insert id="subRentalReturn" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.zhangfu.CsCancel" >
		INSERT INTO cs_cancels(terminal_id,status,templete_info_xml,created_at,updated_at,types,customer_id,apply_num)
		VALUES(#{terminalId},#{status},#{templeteInfoXml},now(),now(),#{types},#{customerId},unix_timestamp(now()))
	</insert>
	
	<select id="JudgeRentalReturnStatus"  resultType="int" parameterType="map">
		SELECT count(*) from cs_cancels
		WHERE terminal_id = #{terminalId}
		AND `status` in (#{statusa},#{statusb})
	</select>
	
	<insert id="subToUpdate" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO cs_update_infos(terminal_id,status,templete_info_xml,created_at,updated_at,customer_id,apply_num)
		VALUES(#{terminalsId},#{status},#{templeteInfoXml},now(),now(),#{customerId},unix_timestamp(now()))
	</insert>
	
	<select id="JudgeUpdateStatus"  resultType="int" parameterType="map">
		SELECT count(*) from cs_update_infos
		WHERE terminal_id = #{terminalId}
		AND `status` in (#{statusa},#{statusb})
	</select>
	
	<select id="getTerminalOpen"  resultType="map" parameterType="map">
		SELECT i.* FROM opening_applies o 
		LEFT JOIN terminal_opening_infos i on i.opening_applies_id = o.id and i.types = #{type}
		WHERE o.terminal_id = #{id} 
	</select>
	
	<select id="getCustomerAddress"  resultType="map" parameterType="int">
		SELECT * from customer_addresses
		WHERE customer_id = #{customerId}
	</select>
	
	<select id="JudgeChangStatus"  resultType="int" parameterType="map">
		SELECT count(*) from cs_changes
		WHERE terminal_id = #{terminalId}
		AND `status` in (#{statusa},#{statusb})
	</select>
	
	<select id="getTrackRecord" parameterType="int" resultType="map">
		SELECT s.created_at,s.content,c.`name`
		FROM terminals t LEFT
		JOIN opening_applies i ON t.id=i.terminal_id
		LEFT JOIN
		opening_apply_marks s ON i.id=s.opening_apply_id
		LEFT JOIN customers c ON
		s.custom_id=c.id
		where t.id=#{id}
	</select>


	<insert id="addMerchants" useGeneratedKeys="true" keyProperty="id" parameterType="com.comdosoft.financial.user.domain.zhangfu.Merchant">
		INSERT into
		merchants(title,customer_id,created_at)
		VALUES(#{title},#{customerId},now())
	</insert>

	<insert id="addTerminal" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT into
		terminals(good_id,serial_num,merchant_id,customer_id,pay_channel_id,status,is_return_cs_depots,created_at,type)
		VALUES(0,#{serialNum},#{merchantId},#{customerId},#{payChannelId},#{status},#{isReturnCsDepots},now(),#{type})
	</insert>
	
	<insert id="subLeaseReturn" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO cs_lease_returns(status,terminal_id,created_at,updated_at,apply_num,order_types,contact,phone,return_address_id,customer_id,cs_cencel_id)
		VALUES(#{status},#{terminalId},now(),now(),unix_timestamp(now()),#{orderTypes},#{contact},#{phone},1,#{customerId},#{csCencelId})
	</insert>
	
	<insert id="subRepair" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT into cs_repairs(terminal_id,status,description,receive_address_id,customer_id,created_at,updated_at,apply_num,return_address_id,cs_repair_marks_id)
		VALUES(#{terminalsId},#{status},#{description},#{receiveAddressId},#{customerId},now(),now(),unix_timestamp(now()),#{returnAddressId},0)
	</insert>
	
	<insert id="subChange" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT into cs_changes(terminal_id,status,receive_address_id,templete_info_xml,created_at,updated_at,reason,customer_id,should_cancel,cs_cencel_id,apply_num)
		VALUES(#{terminalsId},#{status},#{receiveAddressId},#{templeteInfoXml},now(),now(),#{reason},#{customerId},1,#{csCencelId},unix_timestamp(now()))
	</insert>
	
	<insert id="subReturn" useGeneratedKeys="true" keyProperty="id" parameterType="map">
		INSERT INTO cs_returns(terminal_id,status,return_price,reason,should_cencel,cs_cencel_id,customer_id,created_at,updated_at,apply_num,cs_return_marks_id)
		VALUES(#{terminalsId},#{status},#{returnPrice},#{reason},1,#{csCencelId},#{customerId},now(),now(),unix_timestamp(now()),1)
	</insert>
	
	<!-- 查询交易流水用 -->
	<select id="getTerminals" resultType="map">
	<![CDATA[
		SELECT serial_num serialNum,
			   pay_channel_id payChannelId
		  FROM terminals
		 WHERE customer_id = #{customerId} 
		 and serial_num is not null 
		 and pay_channel_id is not null
	]]>
	</select>

	<select id="getTerminalListByPhone" parameterType="map" resultType="map">
		SELECT  t.id,t.serial_num
		FROM terminals t
    	LEFT JOIN merchants m on t.merchant_id=m.id 
		WHERE
		m.phone=#{phone}
	</select>
	
	<select id="getTerminalOpenStatus"  resultType="map">
		SELECT dtt.trade_value,ttti.status from  terminal_trade_type_infos ttti LEFT JOIN
    	dictionary_trade_types dtt on ttti.trade_type_id=dtt.id
     	where ttti.terminal_id=#{id}
	</select>
	
	<select id="getOpeningDetails" parameterType="int" resultType="map">
		SELECT s.`key`,s.`value`,s.types
		FROM terminals t LEFT JOIN
		opening_applies i ON t.id=i.terminal_id
		LEFT JOIN terminal_opening_infos s ON
		i.id=s.opening_applies_id
		where t.id=#{id}
	</select>
	
	<select id="channels" resultType="map">
		SELECT s.id,s.`name`
		FROM pay_channels s
	</select>
	
	<select id="channelsT" resultType="map">
		SELECT d.id,d.`name`
		FROM pay_channels s
		LEFT JOIN pay_channel_billing_cycles p ON p.pay_channel_id = s.id
		LEFT JOIN dictionary_billing_cycles d ON d.id = p.billing_cycles_id
		WHERE s.id = #{id}
	</select>
	
	<select id="findPassword" parameterType="int" resultType="string">
		SELECT password
		FROM terminals
		WHERE id=#{id}
	</select>
	
</mapper>